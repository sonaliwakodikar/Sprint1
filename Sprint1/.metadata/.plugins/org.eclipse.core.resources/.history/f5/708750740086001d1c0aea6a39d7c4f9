package com.sprint1.tourmanagement.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.sprint1.tourmanagement.entity.User;
import com.sprint1.tourmanagement.exception.UserNotFoundException;
import com.sprint1.tourmanagement.repository.UserRepository;

@Service
public class UserServiceImpl implements UserService{

	@Autowired
	private UserRepository userRepository;
	
	@Override
	public String userLogin(String userType, String userId, String password) {
		User validateUser=userRepository.findByuserUserId(userId);
		if(validateUser==null) {
			throw new UserNotFoundException("There is no user with Id: "+userId);
		}
		
		String pwd=validateUser.getUserPassword();
		
		if(!pwd.equals(password)) {
			throw new UserNotFoundException("Invalid Password");
		}
		
		String utype=validateUser.getUserType();
		if(!utype.equalsIgnoreCase(userType)) {
			throw new UserNotFoundException("Invalid User");
		}
		return "User Successfully Logged in";
	}
	
	@Override
	public User saveUser(User user) {
		String password=user.getUserPassword();
		char c;
		for(int i=0;i<password.length();i++) {
			c=(char)(password.charAt(i)+3);
			password=password.substring(0,i)+c+password.substring(i+1);
		}
		user.setUserPassword(password);
		User user1=userRepository.save(user);
		return user1;
	}

	@Override
	public User updateUser(User user) {
		Optional<User> user1=userRepository.findById(user.getUserId());
		if(user1.isEmpty()) {
			throw new UserNotFoundException("There is no user existed with id: "+user.getUserId());
		}
		User user2=new User();
		return userRepository.save(user2);}
}